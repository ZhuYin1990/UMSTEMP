<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserMapper">
	<resultMap type="User" id="userResultMap">
		<id column="ID" property="id" />
		<result column="USER_ID" property="user_id" />
		<result column="PASSWORD" property="password" />
		<result column="USER_NAME" property="user_name" />
		<result column="SERIAL_NUMBER" property="serial_number" />
		<result column="EMAIL" property="email" />
		<result column="PHONE" property="phone" />
		<result column="LAST_LOGIN_TIME" property="last_login_time" />
		<result column="LAST_LOGIN_IP" property="last_login_ip" />
		<result column="STATUS" property="status" />
		<result column="REMARK" property="remark" />
		<result column="SKIN" property="skin" />
		<result column="CREATE_TIME" property="create_time" />
		<result column="CREATE_USER" property="create_user" />
		<result column="UPDATE_TIME" property="update_time" />
		<result column="UPDATE_USER" property="update_user" />
	</resultMap>
	
	<sql id="tableUser">
		SYS_USER
	</sql>
	<sql id="columnUser">
		ID,USER_ID,PASSWORD,USER_NAME,SERIAL_NUMBER,
		EMAIL,PHONE,LAST_LOGIN_TIME,LAST_LOGIN_IP,STATUS,REMARK,
		SKIN,CREATE_TIME,CREATE_USER,UPDATE_TIME,UPDATE_USER
	</sql>
	
	
	<!-- 判断用户名和密码 -->
	<select id="getUserInfo" parameterType="User" resultMap="userResultMap">
		select 
			<include refid="columnUser" />
		from  <include refid="tableUser" />
		where 1=1 and STATUS = '0' 
		<if test="user_id!=null and password!=null">
			and(
	  		(USER_ID = #{user_id} and PASSWORD = #{password})
	  		or
	  		(EMAIL = #{user_id} and PASSWORD = #{password})
	  		or
	  		(SERIAL_NUMBER = #{user_id} and PASSWORD = #{password})
	  		)
		</if>
	</select>
	
	<!-- 分页查询用户信息-->
	<select id="getUserListPage" parameterType="page" resultType="pd" useCache="false">
		<!-- select 
			user.*,role.ROLE_NAME
		from  sys_user user left join sys_user_role userRole
		on user.id = userRole.user_id 
		left join  sys_role role 
		on role.id = userRole.role_id
		where 1=1 and user.starts = '0' 
		  order by create_time   -->
		select 
			<include refid="columnUser" />
		from  <include refid="tableUser" /> 
		where 1=1 and STATUS = '0' 
		
		<if test="pd.keywords != null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
					 USER_ID LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					 EMAIL LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
					 or
					 SERIAL_NUMBER LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or
					 USER_NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or
					 PHONE LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				)
		</if>
		 
		<if test="pd.lastLoginStart!=null and pd.lastLoginStart!=''"><!-- 登录时间检索 -->
			and LAST_LOGIN_TIME &gt;= #{pd.lastLoginStart} 
		</if>
		<if test="pd.lastLoginEnd!=null and pd.lastLoginEnd!=''"><!-- 登录时间检索 -->
			and LAST_LOGIN_TIME &lt;= #{pd.lastLoginEnd} 
		</if>
		  order by create_time 
	</select>



	<update id="updateLastLogin" parameterType="User">
		update  <include refid="tableUser" />  set
		LAST_LOGIN_TIME=#{last_login_time} ,
		LAST_LOGIN_IP=#{last_login_ip} 
		where ID=#{id}
	</update>




	<!-- 通过USERNAME获取数据 -->
	<select id="findByUserId" parameterType="pd" resultMap="userResultMap" useCache="false">
		select 
			 <include refid="columnUser" />
		from 
			 <include refid="tableUser" />
		where 
			ID = #{id}
	</select>
	
		<!-- 修改 -->
	<update id="editUser" parameterType="pd" flushCache="false">
		UPDATE  SYS_USER
			SET 
			    SERIAL_NUMBER= #{serial_number},
				USER_NAME =#{user_name},
				EMAIL= #{email},
				PHONE= #{phone},
				REMARK= #{remark},
				UPDATE_TIME= #{update_time},
				UPDATE_USER= #{update_user}
			<if test="password != null and password != ''">
				,PASSWORD= #{password}
			</if>
			where 
				ID = #{id}
	</update>
</mapper>